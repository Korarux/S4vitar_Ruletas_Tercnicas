#!/bin/bash

#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

function ctrl_c(){
 echo -e "${redColour}[!]Saliendo...${endColur}\n "
 tput cnorm && exit 1
}

#Crtl_C
trap ctrl_c INT

function HelpPanel(){
echo -e "${greenColour}[+]HelpPanel Uso $0 -->${endcolour}\n"
  echo -e "\t${yellowColour} [+] ${endColour}${purpleColour}m) Dinero que vamos a invertir${endColour}"
  echo -e "\t${yellowColour} [+] ${endColour}${purpleColour}t) Tecnica que vamos a implementar${endColour}${blueColour} (martingala/labrucherInversa)${endColour}"
exit 1
}

function martingala(){
  echo -e "\n ${yellowColour}[+]${endColour} ${grayColour}Dinero actual${endColour} ${yellowColour}$money euros ${endColour}"
   sleep 1
  echo -ne "${yellowColour}[+]${endColour} ${grayColour}Cuanto dinero quieres apostar? -> ${endColour}" && read initial_Bet 
  echo -ne "${yellowColour}[+] ${grayColour}A que deseas apostar continuamente? (${endColour}${redColour}par${endColour}${grayColour}/${endColour}${blueColour}impar${endColour}${grayColour})${endColour} ->  " && read par_impar
  echo -ne "${yellowColour}[+]${endColour} ${purpleColour}Vamos a jugar con la cantidad de${yellowColour} $initial_Bet euros${endColour} ${purpleColour}y al${endColour}${yellowColour} $par_impar${endColour}"

backup_Bet=$initial_Bet
play_counter=1
jugadas_Malas="[ "
max=${money[0]}

  tput civis
  while true; do
  money=$(($money-$initial_Bet))
  echo -e "\n${yellowColour} [+] ${endColour}${grayColour}Acabas de apostar${endColour} ${redColour}$initial_Bet ${endColour}${grayColour} y tienes${endColour} ${yellowColour}$money euros${endColour}"
  random_number="$(($RANDOM % 37))"
  echo -e "${yellowColour}[+] ${endColour} ${grayColour}Ha salido el${endColour}${turquoiseColour} $random_number ${endColour}"

#APOSTAR A PAR

  if [ ! "$money" -lt 0 ]; then
    if [ $par_impar == "par" ]; then
     if [ "$(($random_number % 2))" -eq 0 ]; then
       if [ $random_number -eq 0 ]; then
         echo -e "${yellowColour}[+]${endColour}${grayColour} Ha salido el${endColour}${greenColour} 0${endColour} Pierdes malo"
         initial_Bet=$(($initial_Bet*2))
         jugadas_Malas+="$random_number"
         echo -e "${yellowColour}[+] ${endColour}${grayColour}Tienes ${endColour}${yellowColour}$money euros ${endColour}"
       else
         echo -e "${greenColour}[+] Ha salido el par !WIN¡${endColour}"
         reward=$(($initial_Bet*2))
         echo -e "${yellowColour}[+] ${endColour}${grayColour}Has ganado${endColour} ${yellowColour}$reward${endColour}"
         money=$(($money+$reward))
         echo -e "${yellowColour}[+] ${endColour}${grayColour}Tienes${endColour} ${yellowColour}$money euros ${endColour}"
         initial_Bet=$backup_Bet
         jugadas_Malas="[ "
       fi  
        else
         echo -e "${redColour}[!] ha salido el impar !LOSE¡${endColour}"
         initial_Bet=$(($initial_Bet*2))
         jugadas_Malas+="$random_number "
         echo -e "${yellowColour}[+]${endColour} ${grayColour}Tienes${endColour} ${yellowColour}$money euros ${endColour}"
        for num in "${money[@]}"; do
          if [ "$money" -gt "$max" ]; then
            let max=$money
          fi 
        done
     fi

#APOSTAR A IMPAR

     else
         if [ "$(($random_number % 2))" -eq 1 ]; then
           echo -e "${greenColour}[+] Ha salido el impar !WIN¡${endColour}"
           reward=$(($initial_Bet*2))
           echo -e "${yellowColour}[+] ${endColour}${grayColour}Has ganado${endColour} ${yellowColour}$reward${endColour}"
           money=$(($money+$reward))
           echo -e "${yellowColour}[+] ${endColour}${grayColour}Tienes${endColour} ${yellowColour}$money euros ${endColour}"
           initial_Bet=$backup_Bet
           jugadas_Malas="[ "
        else
           echo -e "${redColour}[!] ha salido el par !LOSE¡${endColour}"
           initial_Bet=$(($initial_Bet*2))
           jugadas_Malas+="$random_number "
           echo -e "${yellowColour}[+]${endColour} ${grayColour}Tienes${endColour} ${yellowColour}$money euros ${endColour}"
         for num in "${money[@]}"; do
          if [ "$money" -gt "$max" ]; then
            max=$money
          fi 
        done

       fi
    fi
   else
     echo -e "${redColour}[!]Nos quedamos sin pasta cabrones${endColour}"
     echo -e "${yellowColour}[+] ${endColour}${grayColour}Ha habido un total de${endColour} ${purpleColour}$(($play_counter-1)) jugadas${endColour}"
     echo -e "${blueColour}[+] Han salido un total de $jugadas_Malas ]${endColour}"
     echo -e "${yellowColour}[+]${endColour} ${grayColour}El maximo numero de dinero que hemos alcanzado es ${endColour}${yellowColour}$max euros${endColour}"
     tput cnorm; exit 0
  fi
   let play_counter+=1
  done
  tput cnorm
}

function labrucherInversa(){
  echo -e "\n ${yellowColour}[+]${endColour} ${grayColour}Dinero actual${endColour} ${yellowColour}$money euros ${endColour}"
  echo -ne "${yellowColour}[+] ${grayColour}A que deseas apostar continuamente? (${endColour}${redColour}par${endColour}${grayColour}/${endColour}${blueColour}impar${endColour}${grayColour})${endColour} ->  " && read par_impar
  max=${money[0]}
  declare -a my_sequence=(1 2 3 4)

  echo -e "${yellowColour}[+]${endColour} ${grayColour}Comenzamos con la secuencia ${endColour} ${purpleColour}[${my_sequence[@]}]${endColour}"

  bet=$((${my_sequence[0]}+${my_sequence[-1]}))
  bet_to_renew=$(($money+50)) #Dinero para renoovar la secuencia

  echo -e "${yellowColour}[+]${endColour} ${grayColour}el tope a renovar es de ${endColour}${yellowColour}$bet_to_renew${endColour}"

  jugadas_totales=0

tput civis
while true; do
let jugadas_totales+=1
 random_number=$(($RANDOM % 37))
 money=$(($money - $bet))
 
 if [ ! "$money" -lt 0 ]; then
   echo -e "${yellowColour}[+]${endColour} ${grayColour}Invertimos ${yellowColour} $bet euros ${endColour}${grayColour}y nos quedamos con${endColour} ${purpleColour}[${my_sequence[@]}]${endColour}"
   echo -e "${yellowColour}[+]${endColour} ${grayColour}Tenemos${endColour} ${yellowColour}$money${endColour}"

   echo -e "${yellowColour}[+]${endColour} ${grayColour}Ha salido el numero ${endColour}${blueColour}$random_number${endColour}"

#APOSTAR A PAR

   if [ "$par_impar" == "par" ]; then
     if [ "$(($random_number % 2))" -eq 0 ] && [ "$random_number" -ne 0  ]; then
       echo -e "${greenColour}[+]El numero es PAR gg${endColour}"
       reward=$(($bet*2))
       let money+=$reward
       echo -e "${yellowColour}[+]${endColour} ${grayColour}Tienes${endColour} ${yellowColour}$money euros${endColour}"
       
       if [ $money -gt $bet_to_renew ]; then
         echo -e "${yellowColour}[+]${endColour} ${grayColour}Se ha superado el tope de${endColour} ${yellowColour}$bet_to_renew${endColour} ${grayColour}euros de nuestra secuencia${endColour}"
         bet_to_renew=$(($bet_to_renew + 50))
         echo -e "${yellowColour}[+] ${endColour}${grayColour}El tope se ha establecido en${endColour} ${yellowColour}$bet_to_renew euros${endColour}"
         my_sequence=(1 2 3 4)
         bet=$((${my_sequence[0]}+${my_sequence[-1]}))
         echo -e "${yellowColour}[+]${endColour}${grayColour} La secuencia a sido restablecida a${endColour}${purpleColour} [${my_secquence[@]}]${endColour}"
     else 
       my_sequence+=($bet)
       my_sequence=(${my_sequence[@]})

       echo -e "${yellowColour}[+]${endColour} ${grayColour}Nuestra secuencia es${endColour} ${purpleColour}[${my_sequence[@]}]${endColour}"
       if [ "${#my_sequence[@]}" -ne 1 ] && [ "${#my_sequence[@]}" -ne 0 ]; then
         bet=$((${my_sequence[0]}+${my_sequence[-1]}))
       elif [ "${#my_sequence[@]}" -eq 1 ]; then
         bet=${my_sequence[0]}
      fi
    fi
    elif [ "$((random_number % 2))" -eq 1 ] || [ "$random_number" -eq 0 ]; then
      if [ "$((random_number % 2))" -eq 1 ]; then
        echo -e "${redColour}[!]El numero es impar F to PARRY${endColour}"
      else
        echo -e "${redColour}[!] Ha salido el 0 pierdes${endColour}"
      fi  
      if  [ $money -lt $(($bet_to_renew-100)) ]; then
         echo -e "${yellowColour}[!]${endColour}${grayColour} Hemos alcanzado un minimo critico, se reajustara el tope${endColour}"
         bet_to_renew=$(($bet_to_renew-50))
         echo -e "${redColour}{+} ${endColour}${grayColour}El tope ha sido renovado a${endColour}${yellowColour} $bet_to_renew euros${endColour}"

         unset my_sequence[0]
         unset my_sequence[-1] 2>/dev/null

         my_sequence=(${my_sequence[@]})

       echo -e "${yellowColour}[+]${endColour} ${grayColour}Nuestra secuencia es${endColour} ${purpleColour}[${my_sequence[@]}]${endColour}"
       if [ "${#my_sequence[@]}" -ne 1 ] && [ "${#my_sequence[@]}" -ne 0 ]; then
         bet=$((${my_sequence[0]}+${my_sequence[-1]}))
       elif [ "${#my_sequence[@]}" -eq 1 ]; then
         bet=${my_sequence[0]}
      fi
       else 
        unset my_sequence[0]
        unset my_sequence[-1] 2>/dev/null

        my_sequence=(${my_sequence[@]})

        echo -e "${yellowColour}[+]${endColour} ${grayColour}La secuencia se nos queda de la siguinte manera${endColour}${purpleColour} [${my_sequence[@]}]${endColour}"
        if [ "${#my_sequence[@]}" -ne 1 ] && [ "${#my_sequence[@]}" -ne 0 ]; then
          bet=$((${my_sequence[0]}+${my_sequence[-1]}))
        elif [ "${#my_sequence[@]}" -eq 1 ]; then
          bet=${my_sequence[0]}
        else
          echo -e "${redColour}[!] Hemos perdido la secuencia${endColour}"
          my_sequence=(1 2 3 4)
          echo -e "${greenColour}[~]${endColour} ${grayColour}Restableciendo la secuencia a${endColour} ${purpleColour}[${my_sequence[@]}]${endColour}"
          bet=$((${my_sequence[0]}+${my_sequence[-1]}))
        fi 
       for num in "${money[@]}"; do
          if [ "$money" -gt "$max" ]; then
           max="$money"
          fi
       done
      fi 
    fi  
else

#APOSTAR AL IMPAR

  if [ "$(($random_number % 2))" -eq 1 ] && [ "$random_number" -ne 0  ]; then
       echo -e "${greenColour}[+]El numero es IMPAR gg${endColour}"
       reward=$(($bet*2))
       let money+=$reward
       echo -e "${yellowColour}[+]${endColour} ${grayColour}Tienes${endColour} ${yellowColour}$money euros${endColour}"
       
       if [ $money -gt $bet_to_renew ]; then
         echo -e "${yellowColour}[+]${endColour} ${grayColour}Se ha superado el tope de${endColour} ${yellowColour}$bet_to_renew${endColour} ${grayColour}euros de nuestra secuencia${endColour}"
         bet_to_renew=$(($bet_to_renew + 50))
         echo -e "${yellowColour}[+] ${endColour}${grayColour}El tope se ha establecido en${endColour} ${yellowColour}$bet_to_renew euros${endColour}"
         my_sequence=(1 2 3 4)
         bet=$((${my_sequence[0]}+${my_sequence[-1]}))
         echo -e "${yellowColour}[+]${endColour}${grayColour} La secuencia a sido restablecida a${endColour}${purpleColour} [${my_secquence[@]}]${endColour}"
     else 
       my_sequence+=($bet)
       my_sequence=(${my_sequence[@]})

       echo -e "${yellowColour}[+]${endColour} ${grayColour}Nuestra secuencia es${endColour} ${purpleColour}[${my_sequence[@]}]${endColour}"
       if [ "${#my_sequence[@]}" -ne 1 ] && [ "${#my_sequence[@]}" -ne 0 ]; then
         bet=$((${my_sequence[0]}+${my_sequence[-1]}))
       elif [ "${#my_sequence[@]}" -eq 1 ]; then
         bet=${my_sequence[0]}
      fi
    fi
    elif [ "$((random_number % 2))" -eq 0 ] || [ "$random_number" -eq 0 ]; then
      if [ "$((random_number % 2))" -eq 0 ]; then
        echo -e "${redColour}[!]El numero es par F to PARRY${endColour}"
      else
        echo -e "${redColour}[!] Ha salido el 0 pierdes${endColour}"
      fi  
      if  [ $money -lt $(($bet_to_renew-100)) ]; then
         echo -e "${yellowColour}[!]${endColour}${grayColour} Hemos alcanzado un minimo critico, se reajustara el tope${endColour}"
         bet_to_renew=$(($bet_to_renew-50))
         echo -e "${redColour}{+} ${endColour}${grayColour}El tope ha sido renovado a${endColour}${yellowColour} $bet_to_renew euros${endColour}"

         unset my_sequence[0]
         unset my_sequence[-1] 2>/dev/null

         my_sequence=(${my_sequence[@]})

       echo -e "${yellowColour}[+]${endColour} ${grayColour}Nuestra secuencia es${endColour} ${purpleColour}[${my_sequence[@]}]${endColour}"
       if [ "${#my_sequence[@]}" -ne 1 ] && [ "${#my_sequence[@]}" -ne 0 ]; then
         bet=$((${my_sequence[0]}+${my_sequence[-1]}))
       elif [ "${#my_sequence[@]}" -eq 1 ]; then
         bet=${my_sequence[0]}
      fi
       else 
        unset my_sequence[0]
        unset my_sequence[-1] 2>/dev/null

        my_sequence=(${my_sequence[@]})

        echo -e "${yellowColour}[+]${endColour} ${grayColour}La secuencia se nos queda de la siguinte manera${endColour}${purpleColour} [${my_sequence[@]}]${endColour}"
        if [ "${#my_sequence[@]}" -ne 1 ] && [ "${#my_sequence[@]}" -ne 0 ]; then
          bet=$((${my_sequence[0]}+${my_sequence[-1]}))
        elif [ "${#my_sequence[@]}" -eq 1 ]; then
          bet=${my_sequence[0]}
        else
          echo -e "${redColour}[!] Hemos perdido la secuencia${endColour}"
          my_sequence=(1 2 3 4)
          echo -e "${greenColour}[~]${endColour} ${grayColour}Restableciendo la secuencia a${endColour} ${purpleColour}[${my_sequence[@]}]${endColour}"
          bet=$((${my_sequence[0]}+${my_sequence[-1]}))
        fi 
       for num in "${money[@]}"; do
          if [ "$money" -gt "$max" ]; then
           max="$money"
          fi
       done
      fi 
    fi
  fi
  else
  echo -e "${redColour}[!]Nos quedamos sin pasta cabrones${endColour}"
  echo -e "${yellowColour}[+]${endColour} ${grayColour}Ha habido un total de${endColour}${turquoiseColour} $jugadas_totales ${endColour}${grayColour}jugadas${endColour}"
  echo -e "${yellowColour}[+]${endColour} ${grayColour}El maximo numero de dinero que hemos alcanzado es ${endColour}${yellowColour}$max euros${endColour}"
  tput cnorm; exit 1
  fi
done
}

while getopts "m:t:h" arg; do
  case $arg in
    m) money="$OPTARG";;
    t) tecnica="$OPTARG";;
    h) HelpPanel
  esac
done

if [ $money ] && [ $tecnica  ]; then
  if [ "$tecnica" == "martingala" ]; then
martingala
  elif [ "$tecnica" == "labrucherInversa" ]; then 
    labrucherInversa
  else  
    echo -e "${redColour}[!]La tecnica seleccionada no existe ${endColour}"
    HelpPanel
  fi    
else 
 HelpPanel
fi
